"use strict";(self.webpackChunkh3yun_pdocs=self.webpackChunkh3yun_pdocs||[]).push([[614],{7472:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>e});var n=a(641);const l={},t=(0,a(6262).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<p>氚云开发为在线开发，您无需安装任何开发环境与IDE，在线上编写的代码，点击保存之后，会直接生效到线上环境。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>对于新手开发者，建议单独建一个测试应用，用于代码测试，以防影响线上应用。</p></div><h2 id="代码编辑器" tabindex="-1"><a class="header-anchor" href="#代码编辑器"><span>代码编辑器</span></a></h2><p>氚云一共有4个代码编辑器界面，分别是：表单设计页面的前端代码、后端代码，列表设计页面的前端代码、后端代码。前端代码中统一使用 <code>JavaScript</code> 语言开发，后端代码中统一使用 <code>C#</code> 语言开发。</p><p>不清楚代码该写哪里，就看代码执行的时机是在表单页面中，还是在列表页面中。表单设计页中编写表单页面相关的逻辑代码，列表设计页中编写列表页面相关的逻辑代码。例如：</p><ul><li>表单打开时、点击表单提交按钮、点击表单删除按钮、流程事件 的代码写表单设计页里</li><li>列表打开时、点击列表删除按钮 的代码写列表设计页里</li></ul><p>注意：</p><ul><li><p>由于是在线的编辑器，会受限于网络、浏览器等因素，对于代码中关键字和语法的识别不是特别准确，此问题需要慢慢适应</p></li><li><p>后端代码编辑器出现误报，可以尝试先保存代码，若保存成功，说明代码语法无误，随后刷新页面语法就能被识别</p></li><li><p>前端代码编辑器出现误报，只能保存后，在浏览器的开发者工具中才能确认代码是否正确</p></li></ul><h3 id="编辑器基本功能" tabindex="-1"><a class="header-anchor" href="#编辑器基本功能"><span>编辑器基本功能</span></a></h3><ol><li>格式化代码</li></ol><p>在表单设计/列表设计页面，后端代码和前端代码都可以进行代码格式化，提升代码可读性</p><p>同时排除一些影响编译的字符，建议每次编写完代码后都格式化一次代码。</p><ul><li><p>在后端代码/前端代码页面，鼠标右键，点击 <code>Format Code</code></p></li><li><p>在后端代码/前端代码页面，使用快捷键 <code>Shift + Alt + F</code></p></li></ul><ol start="2"><li>代码搜索</li></ol><ul><li><p>在后端代码/前端代码页面，鼠标右键，点击 <code>Find</code></p></li><li><p>在后端代码/前端代码页面，使用快捷键 <code>Ctrl + F</code></p></li></ul><ol start="3"><li>替换代码</li></ol><ul><li>使用快捷键 <code>Ctrl + H</code></li></ul><h2 id="代码调试器" tabindex="-1"><a class="header-anchor" href="#代码调试器"><span>代码调试器</span></a></h2><h3 id="列表、表单后端代码调试" tabindex="-1"><a class="header-anchor" href="#列表、表单后端代码调试"><span>列表、表单后端代码调试</span></a></h3><ul><li><p>列表或表单的后端代码调试，都是先在列表界面中，按F12调出代码调试工具（若一直按无反应，可以刷新页面后重试）</p></li><li><p>后端调试器启动完成后，会自动进入调试模式并开始执行代码</p></li><li><p>调试表单后端代码时，点击列表上的数据标题打开表单数据查看页，或者点击新增按钮打开表单数据新增页，此时调试器会自动由列表代码调试转换为表单代码调试</p></li><li><p>Mac 电脑通过 fn + 相应的功能键，例如 <code>fn + F12</code> 来打开调试工具</p></li><li><p>在调试过程中，右侧的监视窗口会自动输出相关变量值，为变量跟踪、代码调试提供支持（注意：只有显式定义变量才会出现在监视窗口）</p></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果后端调试器在启动时，会检验用户编写的代码，如编辑器内未编写任何代码，或者仅有默认代码，后端调试器将会不进入调试模式。</p></div><p>后端代码调试快捷键：</p><ul><li><p>F10 逐过程执行</p></li><li><p>F11 逐句执行单步调试</p></li><li><p>F9 加入/取消断点</p></li></ul><h3 id="列表、表单前端代码调试" tabindex="-1"><a class="header-anchor" href="#列表、表单前端代码调试"><span>列表、表单前端代码调试</span></a></h3><p>氚云使用的是浏览器自带的开发者工具进行前端代码的调试，在调试之前，需要在前端代码里单独一行加入debugger标记。例：</p><div class="language-js line-numbers-mode has-collapsed collapsed" data-ext="js" data-title="js" style="--vp-collapsed-lines:15;"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//表单设计前端代码</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">JForm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,{</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 加载事件</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    OnLoad</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //单独一行加入此标记</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        debugger</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        /**********以下代码为业务代码示例，此示例只需关注上面这个 debugger 这个标记如何添加**********/</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //由于会在回调函数里用到this，而回调函数内直接用this会导致指向错误，所以要在此处先用一个变量存储</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> that</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //设置一个文本框控件值为 test</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">F0000001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SetValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 按钮事件</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    OnLoadActions</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">actions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 提交校验</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    OnValidate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">actionControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //单独一行加入此标记</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        debugger</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 提交前事件</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    BeforeSubmit</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">postValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //单独一行加入此标记</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        debugger</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 提交后事件</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    AfterSubmit</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">responseValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //单独一行加入此标记</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        debugger</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//列表设计前端代码</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ListView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ActionPreDo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">actionCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">actionCode</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;按钮编码&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //单独一行加入此标记</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        debugger</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加完 <code>debugger</code> 标记之后，回到列表页面 --&gt; 刷新页面 --&gt; 通过快捷键 <code>**Ctrl + Shift + I**</code> 调出开发者工具。<br> 当js引擎执行到debugger标记处，就会自动跳到代码块。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>debugger</code> 标记可以直接加在任意要调试的代码前一行，不是一定要加在事件首句。</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>不同电脑和浏览器，打开开发者工具的快捷键会不一样，不清楚的话，可以百度一下。</p><p>未使用过浏览器开发者工具的同学，推荐阅读：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/What_are_browser_developer_tools" target="_blank" rel="noopener noreferrer">浏览器开发者工具打开与使用</a> 。</p><p>前端代码调试，推荐使用Chrome浏览器。</p></div>',30)]))}]]),e=JSON.parse('{"path":"/docs/dev-tools/","title":"开发工具","lang":"zh-CN","frontmatter":{"title":"开发工具","createTime":"2025/02/12 17:55:47","permalink":"/docs/dev-tools/","description":"氚云开发为在线开发，您无需安装任何开发环境与IDE，在线上编写的代码，点击保存之后，会直接生效到线上环境。 提示 对于新手开发者，建议单独建一个测试应用，用于代码测试，以防影响线上应用。 代码编辑器 氚云一共有4个代码编辑器界面，分别是：表单设计页面的前端代码、后端代码，列表设计页面的前端代码、后端代码。前端代码中统一使用 JavaScript 语言开...","head":[["meta",{"property":"og:url","content":"https://h3yunpro.github.io/h3yunpro.github.io/docs/dev-tools/"}],["meta",{"property":"og:site_name","content":"氚专开发者扩展文档"}],["meta",{"property":"og:title","content":"开发工具"}],["meta",{"property":"og:description","content":"氚云开发为在线开发，您无需安装任何开发环境与IDE，在线上编写的代码，点击保存之后，会直接生效到线上环境。 提示 对于新手开发者，建议单独建一个测试应用，用于代码测试，以防影响线上应用。 代码编辑器 氚云一共有4个代码编辑器界面，分别是：表单设计页面的前端代码、后端代码，列表设计页面的前端代码、后端代码。前端代码中统一使用 JavaScript 语言开..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T08:01:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-21T08:01:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T08:01:52.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":4.64,"words":1391},"git":{"updatedTime":1740124912000,"contributors":[{"name":"氚云-凡狐","username":"氚云-凡狐","email":"huca@authine.com","commits":2,"avatar":"https://avatars.githubusercontent.com/氚云-凡狐?v=4","url":"https://github.com/氚云-凡狐"}]},"autoDesc":true,"filePathRelative":"notes/docs/基础/开发工具.md"}')}}]);